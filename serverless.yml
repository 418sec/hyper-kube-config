service: kube-auth-store

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    noDeploy: []

provider:
  name: aws
  runtime: python3.6
  region: us-west-2
  apiKeys:
    - ${opt:stage, self:provider.stage}-key

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "secretsmanager:*"
      Resource: "*" 
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"

  environment:
    DYNAMODB_TABLE_K8_CLUSTERS: ${self:service}-${opt:stage, self:provider.stage}-clusters
    DOMAIN_NAME: ${opt:domain}

functions:
  add_cluster:
    handler: add_cluster.add_cluster
    events:
      - http:
          path: clusters/add
          method: post
          private: true
  remove_cluster:
    handler: remove_cluster.remove_cluster
    events:
      - http:
          path: clusters/remove
          method: post
          private: true
  get_user_creds:
    handler: get_user_creds.get_user_creds 
    events:
      - http:
          path: clusters/get-user-creds
          method: get
          private: true
          
resources:
  Resources:
    KubeAuthStoreClustersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 3
        TableName: '${self:provider.environment.DYNAMODB_TABLE_K8_CLUSTERS}'